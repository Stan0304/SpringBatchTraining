package sopra.springbatch.training1.part3.item.writer;

import java.util.LinkedList;
import java.util.List;

import junit.framework.Assert;

import org.apache.log4j.Logger;
import org.junit.Test;
import org.springframework.batch.item.ExecutionContext;
import org.springframework.batch.item.ItemStreamReader;
import org.springframework.batch.item.ItemStreamWriter;
import org.springframework.batch.item.NonTransientResourceException;
import org.springframework.batch.item.ParseException;
import org.springframework.batch.item.UnexpectedInputException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.transaction.annotation.Transactional;

import sopra.springbatch.training1.dto.CustomerDTO;

public class WriterTestHelper {

	@Autowired
	ItemStreamWriter<CustomerDTO> itemWriter;
	
	private static Logger LOGGER = Logger.getLogger(WriterTestHelper.class); 
	
	@Test
	@Transactional
	public void testRead() throws UnexpectedInputException, ParseException, NonTransientResourceException, Exception {
		//A ECRIRE
		List<CustomerDTO> toWrite = getToWrite(); 
		
		//ECRITURE
		itemWriter.open(new ExecutionContext());
		itemWriter.write(toWrite);
		itemWriter.close();
		
		
		Assert.assertEquals(expected, actual);
	}
	
	public List<CustomerDTO> getToWrite(){
		List<CustomerDTO> expected = new LinkedList<CustomerDTO>();
		CustomerDTO customer1 = new CustomerDTO();
		customer1.setFirstName("fcustomer1");
		customer1.setLastName("lcustomer1");
		customer1.setAge(10);
		customer1.setGender("M");
		CustomerDTO customer2 = new CustomerDTO();
		customer2.setFirstName("fcustomer2");
		customer2.setLastName("lcustomer2");
		customer2.setAge(20);
		customer2.setGender("F");
		CustomerDTO customer3 = new CustomerDTO();
		customer3.setFirstName("fcustomer3");
		customer3.setLastName("lcustomer3");
		customer3.setAge(30);
		customer3.setGender("F");
		CustomerDTO customer4 = new CustomerDTO();
		customer4.setFirstName("fcustomer4");
		customer4.setLastName("lcustomer4");
		customer4.setAge(40);
		customer4.setGender("M");
		
		// Construction de la liste
		expected.add(customer1);
		expected.add(customer2);
		expected.add(customer3);
		expected.add(customer4);
		
		return expected;
	}
}
